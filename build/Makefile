# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  sqlite3lib_config = debug_win32
  sqlite3dll_config = debug_win32
  sqlite3shell_config = debug_win32
  sqlite3libicu_config = debug_win32
  sqlite3dllicu_config = debug_win32
  sqlite3shellicu_config = debug_win32

else ifeq ($(config),debug_win64)
  sqlite3lib_config = debug_win64
  sqlite3dll_config = debug_win64
  sqlite3shell_config = debug_win64
  sqlite3libicu_config = debug_win64
  sqlite3dllicu_config = debug_win64
  sqlite3shellicu_config = debug_win64

else ifeq ($(config),release_win32)
  sqlite3lib_config = release_win32
  sqlite3dll_config = release_win32
  sqlite3shell_config = release_win32
  sqlite3libicu_config = release_win32
  sqlite3dllicu_config = release_win32
  sqlite3shellicu_config = release_win32

else ifeq ($(config),release_win64)
  sqlite3lib_config = release_win64
  sqlite3dll_config = release_win64
  sqlite3shell_config = release_win64
  sqlite3libicu_config = release_win64
  sqlite3dllicu_config = release_win64
  sqlite3shellicu_config = release_win64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := sqlite3lib sqlite3dll sqlite3shell sqlite3libicu sqlite3dllicu sqlite3shellicu

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

sqlite3lib:
ifneq (,$(sqlite3lib_config))
	@echo "==== Building sqlite3lib ($(sqlite3lib_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3lib.make config=$(sqlite3lib_config)
endif

sqlite3dll:
ifneq (,$(sqlite3dll_config))
	@echo "==== Building sqlite3dll ($(sqlite3dll_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3dll.make config=$(sqlite3dll_config)
endif

sqlite3shell: sqlite3lib
ifneq (,$(sqlite3shell_config))
	@echo "==== Building sqlite3shell ($(sqlite3shell_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3shell.make config=$(sqlite3shell_config)
endif

sqlite3libicu:
ifneq (,$(sqlite3libicu_config))
	@echo "==== Building sqlite3libicu ($(sqlite3libicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3libicu.make config=$(sqlite3libicu_config)
endif

sqlite3dllicu:
ifneq (,$(sqlite3dllicu_config))
	@echo "==== Building sqlite3dllicu ($(sqlite3dllicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3dllicu.make config=$(sqlite3dllicu_config)
endif

sqlite3shellicu: sqlite3libicu
ifneq (,$(sqlite3shellicu_config))
	@echo "==== Building sqlite3shellicu ($(sqlite3shellicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3shellicu.make config=$(sqlite3shellicu_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f sqlite3lib.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3dll.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3shell.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3libicu.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3dllicu.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3shellicu.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_win64"
	@echo "  release_win32"
	@echo "  release_win64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   sqlite3lib"
	@echo "   sqlite3dll"
	@echo "   sqlite3shell"
	@echo "   sqlite3libicu"
	@echo "   sqlite3dllicu"
	@echo "   sqlite3shellicu"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"